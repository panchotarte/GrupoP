scale_y_continuous(breaks = c(0,1), labels=c("0","1"))+
labs(x="Predicción del modelo", y="Valor observado o probabilidad de 1 predicha")+
theme_bw()
library(tidyr)
library(tidyverse)
ggplot(data_mod, aes(x = Predicted,  y = Observed))+
geom_point(alpha=0.1)+
geom_smooth(method="lm", se=FALSE)+
scale_y_continuous(breaks = c(0,1), labels=c("0","1"))+
labs(x="Predicción del modelo", y="Valor observado o probabilidad de 1 predicha")+
theme_bw()
ggplot(data_mod, aes(x = Predicted,  y = Observed))+
geom_point(alpha=0.1)+
geom_smooth(method="lm", se=FALSE)+
scale_y_continuous(breaks = c(0,1), labels=c("0","1"))+
labs(x="Predicción del modelo", y="Valor observado o probabilidad de 1 predicha")+
theme_bw() +
abline(h = 1, lty = 2, col = "darkred")
abline(h = 0, lty = 2, col = "darkred")+
text(2.5, 0.9, cex = 0.8, "Cesárea")
abline(h = 0, lty = 2, col = "darkred")+
text(2.5, 0.9, cex = 0.8, "Cesárea")+
text(2.5, -0.1, cex= 0.8, "Vaginal")
ggplot(data_mod, aes(x = Predicted,  y = Observed))+
geom_point(alpha=0.1)+
geom_smooth(method="lm", se=FALSE)+
scale_y_continuous(breaks = c(0,1), labels=c("0","1"))+
labs(x="Predicción del modelo", y="Valor observado o probabilidad de 1 predicha")+
theme_bw()
## Histograma de residuos
hist(Modelo1$residuals, main = "Histograma de residuos del PrimerModelo", xlab = "Residuos del PrimerModelo")
## Histograma de residuos
hist(PrimerModelo$residuals, main = "Histograma de residuos del PrimerModelo", xlab = "Residuos del PrimerModelo")
#Calculamos la proporcion de problemas cardiacos para usar en la bondad de ajuste.
table(base_select$pcard)
131/1359
b = 131/1359
## Bondad de ajuste: Tabla de predicciones correctas e incorrectas
base_select$pcard_hat <- ifelse(base_select$prediccion > b, 1, 0)
summary(base_select$pcard_hat)
addmargins(table(base_select$pcard,base_select$pcard_hat))
prop.table(table(base_select$pcard,base_select$pcard_hat),1)
prop.table(table(base_select$pcard,base_select$pcard_hat),2)
## El MPL se dice que es "intrínsecamente heteroscedástico"
data_het <- data.frame(pred=PrimerModelo$fitted.values, res2=PrimerModelo$residuals^2)
ggplot(data=data_het, mapping=aes(x=pred, y=res2)) +
geom_point() +
labs(x="Predicción de la probabilidad de problemas cardiacos", y="Residuo al cuadrado") +
labs(title="Predicción de la varianza condicional del término de error")
#tiramos el modelo robusto
coeftest(PrimerModelo, vcov. = vcovHC)
#los activamos
library("readr")
library("haven")
library("zoo")
library("lmtest")
library("dplyr")
library("datos")
library("tidyverse")
library("tidyverse")
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
library("assertthat")
library("car")
library("tseries")
library("ggplot2")
library("sandwich")
library("ivreg")
library("AER")
library("data.table")
library("psych")
library("jtools")
library("skedastic")
#tiramos el modelo robusto
coeftest(PrimerModelo, vcov. = vcovHC)
base_select$pred <- predict.lm(PrimerModeloMCP)
View(base_select)
base_select$pred <- predict.lm(PrimerModeloMCP)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data = base_select, weights =pond )
View(PrimerModeloMCP)
pred <- predict.lm(PrimerModeloMCP)
base_select$pcard_hat2 <- ifelse(pred > b, 1, 0)
pond <- 1/sqrt(base_select$var)
#PARTE I
##Se pide 1
### Base de datos
ech2017_vivienda <-read_csv("ech2017_vivienda.csv")
summary(ech2017_vivienda)
view (ech2017_vivienda)
View (ech2017_vivienda)
##Se pide 2
# Filtro base de datos para sacar a inquilinos
f.ech2017_vivienda <-  filter(ech2017_vivienda, valor_loc>0)
#PARTE I
##Se pide 1
### Base de datos
ech2017_vivienda <-read_csv("ech2017_vivienda.csv")
##Se pide 2
# Filtro base de datos para sacar a inquilinos
f.ech2017_vivienda <-  filter(ech2017_vivienda, valor_loc>0)
# Se pide 3
Modelo1 <- lm(valor_loc~ casa +n_dormitorios+ n_banos+ asentamiento+ est_medio_bajo+ est_alto+ est_medio_alto+ est_medio+ paredes_3+ paredes_2+
paredes_4+ techo_2+ techo_3+ techo_4+ pisos_2+ pisos_3+humed_goteras, data=f.ech2017_vivienda, x=T, y=T)
f.ech2017_vivienda$cuad.res.m1 <- Modelo1$residuals^2
summary(Modelo1)
View(ech2017_vivienda)
ggplot(data=f.ech2017_vivienda, aes(x=Modelo1$fitted.values, y=valor_loc)) + geom_point()
ggplot(data=base_select, aes(x=PrimerModelo$fitted.values, y=pcard)) + geom_point()
ggplot(data=f.ech2017_vivienda, aes(x=Modelo1$fitted.values, y=Modelo1$residuals)) + geom_point()
ggplot(data=f.ech2017_vivienda, aes(x=Modelo1$fitted.values, y=Modelo1$residuals**2)) + geom_point()
## Regresión aux
Modelo.aux <- lm(cuad.res.m1~ casa +n_dormitorios+ n_banos+ asentamiento+ est_medio_bajo+ est_alto+ est_medio_alto+ est_medio+ paredes_3+ paredes_2+
paredes_4+ techo_2+ techo_3+ techo_4+ pisos_2+ pisos_3+humed_goteras, data=f.ech2017_vivienda, x=T, y=T)
summary(Modelo.aux)
Modelo.V <- lm(log(cuad.res.m1)~ n_dormitorios+ n_banos+banos2+ est_alto+ n_dormitorios:est_alto, data=f.ech2017_vivienda, x=T, y=T)
#PARTE III
# Se pide 10
f.ech2017_vivienda$banos2 <- f.ech2017_vivienda$n_banos^2
Modelo.V <- lm(log(cuad.res.m1)~ n_dormitorios+ n_banos+banos2+ est_alto+ n_dormitorios:est_alto, data=f.ech2017_vivienda, x=T, y=T)
summary(Modelo.V)
########
####
####
#Creamos compenetens necesarios para tirar el modelo de minimos cuadrados ponderados
base_select$cuad.res.m1 <- PrimerModelo$residuals^2      #Agregamos la variable cuadrados de los residuos
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.aux <- lm(cuad.res.m1~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=f.ech2017_vivienda, x=T, y=T)
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.aux <- lm(cuad.res.m1 ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=f.ech2017_vivienda, x=T, y=T)
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.aux <- lm(cuad.res.m1 ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.aux)
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.auxPcard <- lm(cuad.res.m1 ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.auxPcard)
## Regresión aux
Modelo.aux <- lm(cuad.res.m1~ casa +n_dormitorios+ n_banos+ asentamiento+ est_medio_bajo+ est_alto+ est_medio_alto+ est_medio+ paredes_3+ paredes_2+
paredes_4+ techo_2+ techo_3+ techo_4+ pisos_2+ pisos_3+humed_goteras, data=f.ech2017_vivienda, x=T, y=T)
summary(Modelo.aux)
BP.realizacion <- dim(f.ech2017_vivienda)[1]*summary(Modelo.aux)$r.squared
BP.realizacionPcard <- dim(base_select)[1]*summary(Modelo.auxPcard)$r.squared
v.critic <- qchisq(0.95,17)
bptest(PrimerModelo) # sin reescalar
bptest(Modelo1) # sin reescalar
Modelo.aux.1pc <- lm(cuad.res.m1/sigmapc~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.aux.1)
## Reescalando
sigmapc <- sum(base_select$cuad.res.m1)/dim(base_select)[1]
Modelo.aux.1pc <- lm(cuad.res.m1/sigmapc~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.aux.1)
summary(Modelo.aux.1pc)
SCE  <-  sum((Modelo.aux.1pc$fitted.values - mean(base_select$cuad.res.m1/sigmapc))^2)
Realizacion.test <- SCE/2
white(Modelo1, interactions=T)
white(PrimerModelo, interactions=T)
white(PrimerModelo, interactions=T)
## Reescalando
sigma <- sum(f.ech2017_vivienda$cuad.res.m1)/dim(f.ech2017_vivienda)[1]
Modelo.aux.1 <- lm(cuad.res.m1/sigma~ casa +n_dormitorios+ n_banos+ asentamiento+ est_medio_bajo+ est_alto+ est_medio_alto+ est_medio+ paredes_3+ paredes_2+
paredes_4+ techo_2+ techo_3+ techo_4+ pisos_2+ pisos_3+humed_goteras, data=f.ech2017_vivienda, x=T, y=T)
summary(Modelo.aux.1)
SCE  <-  sum((Modelo.aux.1$fitted.values - mean(f.ech2017_vivienda$cuad.res.m1/sigma))^2)
Realizacion.test <- SCE/2
white(Modelo1, interactions=T)
white(Modelo1, interactions=T)
white(PrimerModelo, interactions=T)
#White modificado
base_select$f.values <- PrimerModelo$fitted.values
base_select$f.values.2 <- base_select$f.values^2
Modelo.Wmodpc <- lm(cuad.res.m1~ f.values + f.values.2, data=base_select, x=T, y=T)
summary(Modelo.Wmodpc)
# Se pide 9 White modificado
f.ech2017_vivienda$f.values <- Modelo1$fitted.values
f.ech2017_vivienda$f.values.2 <- f.ech2017_vivienda$f.values^2
Modelo.Wmod <- lm(cuad.res.m1~ f.values + f.values.2, data=f.ech2017_vivienda, x=T, y=T)
summary(Modelo.Wmod)
nR2aux <- nrow(Modelo.Wmod$x)*summary(Modelo.Wmod)$r.squared
Modelo.Wmodpc <- lm(cuad.res.m1~ f.values + f.values.2, data=base_select, x=T, y=T)
summary(Modelo.Wmodpc)
nR2auxpc <- nrow(Modelo.Wmodpc$x)*summary(Modelo.Wmodpc)$r.squared
v.critic <- qchisq(0.95,2)
pchisq(nR2auxpc, 2, ncp = 0, lower.tail = F, log.p = FALSE)
v.critic <- qchisq(0.95,2)
pchisq(nR2aux, 2, ncp = 0, lower.tail = F, log.p = FALSE)
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.auxPcard <- lm(cuad.res.m1 ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.auxPcard)
####
##
#
Modelo.V <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
####
##
#
Modelo.Vpc <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
summary(Modelo.Vpc)
g <- Modelo.Vpc$fitted.values
w <-exp(g)
pond <- 1/sqrt(w)
PrimerModelomcp <- lm(pcard~  huevo + cafe + refresco + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal + cocina , data = base_select, weights=pond)
summary(PrimerModelomcp)
base_select$pred <- predict.lm(PrimerModelomcp)
summary(PrimerModelomcp)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data = base_select, weights =pond )
summary(PrimerModeloMCP)
#Prueba reset para el modelo MCP
resettest(PrimerModeloMCP,
power = 2:3,
type = "fitted")
resettest(PrimerModeloMCP,
power = 2:3,
type = "fitted")
#Prueba reset para el modelo MCO
resettest(PrimerModelo,
power = 2:3,
type = "fitted")
#Prueba reset para el modelo MCP
resettest(PrimerModeloMCP,
power = 2:3,
type = "fitted")
resettest(PrimerModeloMCPpc,
power = 2:3,
type = "fitted")
#Prueba reset para el modelo MCP
resettest(PrimerModelomcppc,
power = 2:3,
type = "fitted")
#Prueba reset para el modelo MCP
resettest(PrimerModelomcp,
power = 2:3,
type = "fitted")
#Prueba reset para el modelo MCP
resettest(PrimerModeloMCP,
power = 2:3,
type = "fitted")
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data = base_select, weights =pond )
summary(PrimerModeloMCP)
PrimerModelomcp <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModelomcp)
summary(PrimerModeloMPCPC)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data = base_select, weights =pond )
summary(PrimerModeloMCP)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
pond <- 1/sqrt(w)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
########
####
####
#Creamos compenetens necesarios para tirar el modelo de minimos cuadrados ponderados
base_select$cuad.res.m1 <- PrimerModelo$residuals^2      #Agregamos la variable cuadrados de los residuos
base_select$var <- predict.lm(PrimerModelo)*(1-predict.lm(PrimerModelo)) #La varianza para cada una de las observaciones ( de los errores condicionales)
pond1 <- 1/sqrt(base_select$var)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond )
summary(PrimerModeloMCP)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal + cocina , data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
########
####
####
#Creamos compenetens necesarios para tirar el modelo de minimos cuadrados ponderados
base_select$cuad.res.m1 <- PrimerModelo$residuals^2      #Agregamos la variable cuadrados de los residuos
base_select$var <- predict.lm(PrimerModelo)*(1-predict.lm(PrimerModelo)) #La varianza para cada una de las observaciones ( de los errores condicionales)
pond1 <- 1/sqrt(base_select$var)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
#Prueba reset para el modelo MCP
resettest(PrimerModeloMCP,
power = 2:3,
type = "fitted")
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.auxPcard <- lm(cuad.res.m1 ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.auxPcard)
BP.realizacionPcard <- dim(base_select)[1]*summary(Modelo.auxPcard)$r.squared
v.critic <- qchisq(0.95,17)
bptest(PrimerModelo) # sin reescalar
## Reescalando
sigmapc <- sum(base_select$cuad.res.m1)/dim(base_select)[1]
Modelo.aux.1pc <- lm(cuad.res.m1/sigmapc~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.aux.1pc)
SCE  <-  sum((Modelo.aux.1pc$fitted.values - mean(base_select$cuad.res.m1/sigmapc))^2)
Realizacion.test <- SCE/2
white(PrimerModelo, interactions=T)
#White modificado
base_select$f.values <- PrimerModelo$fitted.values
base_select$f.values.2 <- base_select$f.values^2
Modelo.Wmodpc <- lm(cuad.res.m1~ f.values + f.values.2, data=base_select, x=T, y=T)
summary(Modelo.Wmodpc)
nR2auxpc <- nrow(Modelo.Wmodpc$x)*summary(Modelo.Wmodpc)$r.squared
v.critic <- qchisq(0.95,2)
pchisq(nR2auxpc, 2, ncp = 0, lower.tail = F, log.p = FALSE)
####
##
#
Modelo.Vpc <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
summary(Modelo.Vpc)
g <- Modelo.Vpc$fitted.values
summary(Modelo.Vpc)
g <- Modelo.Vpc$fitted.values
w <-exp(g)
pond <- 1/sqrt(w)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
resettest(PrimerModeloMCPPC,
power = 2:3,
type = "fitted")
resettest(Primer,
power = 2:3,
type = "fitted")
PrimerModeloMCPPC
resettest(PrimerModeloMPCPC,
power = 2:3,
type = "fitted")
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
summ(PrimerModelo, robust = "HC1") ## HC1 replica stata, recomendado en R HC3
summ(PrimerModelo, robust = "HC3") ## HC1 replica stata, recomendado en R HC3
summ(PrimerModelo, robust = "HC1") ## HC1 replica stata, recomendado en R HC3
summ(PrimerModelo, robust = "HC3") ## HC1 replica stata, recomendado en R HC3
resettest(PrimerModeloMPCPC,
power = 2:3,
type = "fitted")
summary(PrimerModelo) ## HC1 replica stata, recomendado en R HC3
summ(PrimerModelo, robust = "HC3") ## HC1 replica stata, recomendado en R HC3
summary(PrimerModeloMPCPC)
summary(PrimerModeloMPCPC)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
pond <- 1/sqrt(w)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
#White modificado
base_select$f.values <- PrimerModelo$fitted.values
base_select$f.values.2 <- base_select$f.values^2
Modelo.Wmodpc <- lm(cuad.res.m1~ f.values + f.values.2, data=base_select, x=T, y=T)
summary(Modelo.Wmodpc)
nR2auxpc <- nrow(Modelo.Wmodpc$x)*summary(Modelo.Wmodpc)$r.squared
v.critic <- qchisq(0.95,2)
pchisq(nR2auxpc, 2, ncp = 0, lower.tail = F, log.p = FALSE)
####
##
#
Modelo.Vpc <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
summary(Modelo.Vpc)
Modelo.Vpc <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
summary(Modelo.Vpc)
base_select$pred <- predict.lm(PrimerModelomcp)
base_select$pred <- predict.lm(PrimerModeloMPCPC)
View(base_select)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
base_select$pred <- predict.lm(PrimerModeloMPC)
base_select$pred1 <- predict.lm(PrimerModeloMPC)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
base_select$pred1 <- predict.lm(PrimerModeloMCP)
base_select$pred <- predict.lm(PrimerModeloMPCPC)
#####
####
####
##
# Tiramos el primer MPL de encontrar un problema cardiaco
ModeloBasico <- lm(pcard ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2, data = base_select)
summary(ModeloBasico)
#####
######
#####
PrimerModelo <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select)
summary(PrimerModelo)
####
# Tiramos el modelo con su forma reducida tomando como variable dependiente snaks y instrumento cocina.
forma.reducida <-  lm(snacks ~ huevo + cafe + refresco + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal + cocina , data = base_select)
summary(forma.reducida)
#####
######
#####
####
### Variables instrumentales, iverg.
Modelo1instru<- ivreg(pcard ~ huevo + cafe + refresco+ snacks +  hiper + obesi + actfisica+ hombre +edad + edad2+ sal +snacks*sal |
huevo + cafe + refresco + hiper + obesi + actfisica + hombre + edad + edad2 + sal +  cocina + cocina*sal, data = base_select)
summary(Modelo1instru)
########
####
####
#Creamos compenetens necesarios para tirar el modelo de minimos cuadrados ponderados
base_select$cuad.res.m1 <- PrimerModelo$residuals^2      #Agregamos la variable cuadrados de los residuos
base_select$var <- predict.lm(PrimerModelo)*(1-predict.lm(PrimerModelo)) #La varianza para cada una de las observaciones ( de los errores condicionales)
pond1 <- 1/sqrt(base_select$var)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
########################
####################
#Prueba reset para el modelo MCO
resettest(PrimerModelo,
power = 2:3,
type = "fitted")
#Prueba reset para el modelo MCP
resettest(PrimerModeloMCP,
power = 2:3,
type = "fitted")
#######################
######################################################################################################################################################################################
##########################################################################################
#Modelo auxiliar
Modelo.auxPcard <- lm(cuad.res.m1 ~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.auxPcard)
BP.realizacionPcard <- dim(base_select)[1]*summary(Modelo.auxPcard)$r.squared
v.critic <- qchisq(0.95,17)
bptest(PrimerModelo) # sin reescalar
## Reescalando
sigmapc <- sum(base_select$cuad.res.m1)/dim(base_select)[1]
Modelo.aux.1pc <- lm(cuad.res.m1/sigmapc~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.aux.1pc)
SCE  <-  sum((Modelo.aux.1pc$fitted.values - mean(base_select$cuad.res.m1/sigmapc))^2)
Realizacion.test <- SCE/2
white(PrimerModelo, interactions=T)
#White modificado
base_select$f.values <- PrimerModelo$fitted.values
base_select$f.values.2 <- base_select$f.values^2
Modelo.Wmodpc <- lm(cuad.res.m1~ f.values + f.values.2, data=base_select, x=T, y=T)
summary(Modelo.Wmodpc)
nR2auxpc <- nrow(Modelo.Wmodpc$x)*summary(Modelo.Wmodpc)$r.squared
v.critic <- qchisq(0.95,2)
pchisq(nR2auxpc, 2, ncp = 0, lower.tail = F, log.p = FALSE)
####
##
#Nuevo modelo para la varianza condicional del termino de error, guiado por el modelo autxiliar y estimado con los residuos del modelo 1
Modelo.Vpc <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
BP.realizacionPcard <- dim(base_select)[1]*summary(Modelo.auxPcard)$r.squared
v.critic <- qchisq(0.95,17)
bptest(PrimerModelo) # sin reescalar
## Reescalando
sigmapc <- sum(base_select$cuad.res.m1)/dim(base_select)[1]
Modelo.aux.1pc <- lm(cuad.res.m1/sigmapc~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal , data=base_select, x=T, y=T)
summary(Modelo.aux.1pc)
SCE  <-  sum((Modelo.aux.1pc$fitted.values - mean(base_select$cuad.res.m1/sigmapc))^2)
Realizacion.test <- SCE/2
white(PrimerModelo, interactions=T)
#White modificado
base_select$f.values <- PrimerModelo$fitted.values
base_select$f.values.2 <- base_select$f.values^2
Modelo.Wmodpc <- lm(cuad.res.m1~ f.values + f.values.2, data=base_select, x=T, y=T)
summary(Modelo.Wmodpc)
nR2auxpc <- nrow(Modelo.Wmodpc$x)*summary(Modelo.Wmodpc)$r.squared
v.critic <- qchisq(0.95,2)
pchisq(nR2auxpc, 2, ncp = 0, lower.tail = F, log.p = FALSE)
####
##
#Nuevo modelo para la varianza condicional del termino de error, guiado por el modelo autxiliar y estimado con los residuos del modelo 1
Modelo.Vpc <- lm(log(cuad.res.m1)~ huevo + refresco + hiper + obesi + hombre + sal + sal*snacks, data=base_select, x=T, y=T)
summary(Modelo.Vpc)
g <- Modelo.Vpc$fitted.values
w <-exp(g)
pond <- 1/sqrt(w)
PrimerModeloMPCPC <- lm(pcard~  huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights=pond)
summary(PrimerModeloMPCPC)
summary(PrimerModelo)
####
# Tiramos el modelo con su forma reducida tomando como variable dependiente snaks y instrumento cocina.
forma.reducida <-  lm(snacks ~ huevo + cafe + refresco + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal + cocina , data = base_select)
summary(forma.reducida)
#####
######
#####
PrimerModelo <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select)
summary(PrimerModelo)
########
####
####
#Creamos compenetens necesarios para tirar el modelo de minimos cuadrados ponderados
base_select$cuad.res.m1 <- PrimerModelo$residuals^2      #Agregamos la variable cuadrados de los residuos
base_select$var <- predict.lm(PrimerModelo)*(1-predict.lm(PrimerModelo)) #La varianza para cada una de las observaciones ( de los errores condicionales)
pond1 <- 1/sqrt(base_select$var)
###Modelo de minimos cuadrados ponderados
PrimerModeloMCP <-  lm(pcard ~ huevo + cafe + refresco +  snacks + hiper + obesi + actfisica +  hombre  + edad + edad2 + sal+ snacks*sal, data = base_select, weights =pond1 )
summary(PrimerModeloMCP)
summary(PrimerModeloMPCPC)
